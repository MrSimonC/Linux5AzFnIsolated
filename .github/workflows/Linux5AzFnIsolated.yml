name: Build and deploy .NET Core Function App to Azure functions app
on:
  push:
    branches:
    - master
env:
  AZURE_FUNCTIONAPP_NAME: Linux5AzFnIsolated
  AZURE_FUNCTIONAPP_PACKAGE_PATH: Linux5AzFnIsolated
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 5.0.x
  WORKING_DIRECTORY: Linux5AzFnIsolated
  DOTNET_CORE_VERSION_INPROC: 3.1.x
  PLAYWRIGHT_BROWSERS_PATH: Linux5AzFnIsolated/output/.playwright/ms-playwright
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code from GitHub
      uses: actions/checkout@v2
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    
    - name: Setup .NET Core (for inproc extensions)
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION_INPROC }}
        include-prerelease: True
    
    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
    
    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore --output ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output

    - name: Build and Playwright Install
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet tool install --global Microsoft.Playwright.CLI
        playwright install chromium
        popd
    
    # - name: Publish
    #   run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"

    
    - name: Deploy to Azure Function App
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        publish-profile: ${{ secrets.Linux5AzFnIsolated_d519 }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
